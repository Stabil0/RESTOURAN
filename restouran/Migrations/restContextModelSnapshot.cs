// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using restouran.Models;

namespace restouran.Migrations
{
    [DbContext(typeof(restContext))]
    partial class restContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("restouran.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeCode")
                        .HasColumnName("Employee_code")
                        .HasColumnType("INT");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("VARCHAR (50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("VARCHAR (50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("VARCHAR (20)");

                    b.Property<int>("Old")
                        .HasColumnType("INT");

                    b.Property<string>("PassportData")
                        .IsRequired()
                        .HasColumnName("Passport_data")
                        .HasColumnType("VARCHAR (100)");

                    b.Property<int>("Phone")
                        .HasColumnType("INT");

                    b.Property<int>("PositionId")
                        .HasColumnName("Position_id")
                        .HasColumnType("INT");

                    b.HasKey("EmployeeCode");

                    b.HasIndex("PositionId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("restouran.Models.Menu", b =>
                {
                    b.Property<int>("DishCode")
                        .HasColumnName("Dish_code")
                        .HasColumnType("INT");

                    b.Property<int>("Cost")
                        .HasColumnType("INT");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnName("Dish_name")
                        .HasColumnType("VARCHAR (50)");

                    b.Property<int>("IngredientCode1")
                        .HasColumnName("Ingredient_code_1")
                        .HasColumnType("INT");

                    b.Property<int>("IngredientCode2")
                        .HasColumnName("Ingredient_code_2")
                        .HasColumnType("INT");

                    b.Property<int>("IngredientCode3")
                        .HasColumnName("Ingredient_code_3")
                        .HasColumnType("INT");

                    b.Property<DateTime>("TimeForPreparing")
                        .HasColumnName("Time_for_preparing")
                        .HasColumnType("DateTime");

                    b.Property<string>("Volume1")
                        .IsRequired()
                        .HasColumnName("Volume_1")
                        .HasColumnType("VARCHAR (50)");

                    b.Property<string>("Volume2")
                        .IsRequired()
                        .HasColumnName("Volume_2")
                        .HasColumnType("VARCHAR (50)");

                    b.Property<string>("Volume3")
                        .IsRequired()
                        .HasColumnName("Volume_3")
                        .HasColumnType("VARCHAR (50)");

                    b.HasKey("DishCode");

                    b.HasIndex("IngredientCode1");

                    b.HasIndex("IngredientCode2");

                    b.HasIndex("IngredientCode3");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("restouran.Models.Order", b =>
                {
                    b.Property<string>("Check")
                        .IsRequired()
                        .HasColumnType("VARCHAR (50)");

                    b.Property<int>("Cost")
                        .HasColumnType("INT");

                    b.Property<int>("CustomerId")
                        .HasColumnName("Customer_id")
                        .HasColumnType("INT");

                    b.Property<string>("CustomersName")
                        .IsRequired()
                        .HasColumnName("customers_name")
                        .HasColumnType("VARCHAR (50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<int>("DishCode1")
                        .HasColumnName("Dish_code_1")
                        .HasColumnType("INT");

                    b.Property<int>("DishCode2")
                        .HasColumnName("Dish_code_2")
                        .HasColumnType("INT");

                    b.Property<int>("DishCode3")
                        .HasColumnName("Dish_code_3")
                        .HasColumnType("INT");

                    b.Property<int>("Phone")
                        .HasColumnType("INT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("DateTime");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DishCode1");

                    b.HasIndex("DishCode2");

                    b.HasIndex("DishCode3");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("restouran.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .HasColumnName("Position_id")
                        .HasColumnType("INT");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnName("job_name")
                        .HasColumnType("VARCHAR (50)");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("VARCHAR (100)");

                    b.Property<string>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("VARCHAR (100)");

                    b.Property<int>("Salary")
                        .HasColumnType("INT");

                    b.HasKey("PositionId");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("restouran.Models.Warehouse", b =>
                {
                    b.Property<int>("IngredientCode")
                        .HasColumnName("Ingredient_code")
                        .HasColumnType("INT");

                    b.Property<int>("Cost")
                        .HasColumnType("INT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("DateTime");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnName("Ingredient_Name")
                        .HasColumnType("VARCHAR (50)");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("VARCHAR (50)");

                    b.Property<DateTime>("ShelfLife")
                        .HasColumnName("Shelf_life")
                        .HasColumnType("DateTime");

                    b.Property<string>("Volume")
                        .IsRequired()
                        .HasColumnType("VARCHAR (50)");

                    b.HasKey("IngredientCode");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("restouran.Models.Employee", b =>
                {
                    b.HasOne("restouran.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .IsRequired();
                });

            modelBuilder.Entity("restouran.Models.Menu", b =>
                {
                    b.HasOne("restouran.Models.Warehouse", "IngredientCode1Navigation")
                        .WithMany("MenuIngredientCode1Navigations")
                        .HasForeignKey("IngredientCode1")
                        .IsRequired();

                    b.HasOne("restouran.Models.Warehouse", "IngredientCode2Navigation")
                        .WithMany("MenuIngredientCode2Navigations")
                        .HasForeignKey("IngredientCode2")
                        .IsRequired();

                    b.HasOne("restouran.Models.Warehouse", "IngredientCode3Navigation")
                        .WithMany("MenuIngredientCode3Navigations")
                        .HasForeignKey("IngredientCode3")
                        .IsRequired();
                });

            modelBuilder.Entity("restouran.Models.Order", b =>
                {
                    b.HasOne("restouran.Models.Employee", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .IsRequired();

                    b.HasOne("restouran.Models.Menu", "DishCode1Navigation")
                        .WithMany()
                        .HasForeignKey("DishCode1")
                        .IsRequired();

                    b.HasOne("restouran.Models.Menu", "DishCode2Navigation")
                        .WithMany()
                        .HasForeignKey("DishCode2")
                        .IsRequired();

                    b.HasOne("restouran.Models.Menu", "DishCode3Navigation")
                        .WithMany()
                        .HasForeignKey("DishCode3")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
